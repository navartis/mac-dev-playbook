---
- set_fact: 
    yd_node_identifier="{{ yd_host_name_prefix }}{{ ansible_ssh_host.split('.')[3] }}"
  tags: ["always"]

- name: Ensure Jenkins Host Resolving
  lineinfile: 
    path: /etc/hosts
    line: "{{ yd_jenkins_ip }}    {{ yd_jenkins_hostname }}"
    state: present
  become: yes
  tags: ["always"]

- name: Create directory for Jenkins
  file:
    path: /Users/{{ yd_host_user_name }}/Jenkins
    state: directory
  tags: ["always"]

- name: Ensure Old Swarm Clent Without Version Deleted
  file:
    path: ~/Jenkins/swarm-client.jar
    state: absent
  tags: ["always"]

- name: Download Swarm Client
  get_url:
    url: https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/{{ yd_swarm_client_version }}/swarm-client-{{ yd_swarm_client_version }}.jar
    dest: ~/Jenkins/swarm-client-{{ yd_swarm_client_version }}.jar
    # force: yes
  register: swarm_client_file
  tags: ["always"]
  
# - name: Check plist file exists
#   stat:
#     path: /Library/LaunchDaemons/com.jenkins.slave.plist
#   register: plist_file
#   tags: ["always"]

- name: Copy plist
  template:
    src: com.jenkins.slave.j2
    dest: /Library/LaunchDaemons/com.jenkins.slave.plist
    force: true
    owner: root
    group: wheel
    mode: 0644
  become: yes
  register: plist_file
  tags: ["always"]

- name: Unload launchd service
  command: launchctl unload /Library/LaunchDaemons/com.jenkins.slave.plist
  become: yes
  when: plist_file.changed or swarm_client_file.changed
  tags: ["always"]

- name: Check service status
  command: launchctl list com.jenkins.slave
  become: yes
  register: status_result
  changed_when: false
  failed_when: "status_result.rc not in [0, 113]"
  tags: ["always"]

- name: Load launchd service
  command: launchctl load /Library/LaunchDaemons/com.jenkins.slave.plist
  become: yes
  when: "'Could not find service' in status_result.stderr and status_result.rc == 113"
  tags: ["always"]
